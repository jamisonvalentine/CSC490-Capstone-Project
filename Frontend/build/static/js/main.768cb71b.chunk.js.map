{"version":3,"sources":["Images/brand.png","components/lib/Header.js","components/lib/Footer.js","components/utils/SearchForm.js","components/lib/Modal.js","components/utils/SearchResults.js","components/Home.js","components/About.js","components/404.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","brandImage","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","Footer","SearchForm","props","searchQuery","setSearchQuery","setResultPage","handleChange","e","target","name","value","prevState","selectIdCat","onChange","inputProps","placeholder","htmlFor","year","semester","onClick","length","Modal","selectedCollege","role","aria-labelledby","aria-hidden","College","data-dismiss","CourseName","CourseSubject","ClassID","Credits","Instructor","SectionNumber","Semester","Year","ClassDays","CourseBuilding","CourseRoom","Location","TimeOfCourse","WeeksInSemester","Dates","SearchResult","searchData","setSearchData","useState","setSelectedCollege","open","setOpen","tableData","setTableData","useEffect","console","log","readOnly","title","data","columns","field","onRowClick","evt","selectedRow","options","search","filtering","paging","pageSize","pageSizeOptions","exportButton","rowStyle","height","fontSize","headerStyle","maxBodyHeight","icons","Clear","Check","DetailPanel","ChevronRight","Delete","DeleteOutline","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","Search","Remove","Add","SortArrow","ArrowDownward","Edit","ViewColumn","More","actions","icon","tooltip","row","saveResults","localStorage","getItem","saveData","JSON","parse","concat","setItem","stringify","window","alert","handleSaveRow","id_cat","Dialog","DialogTitle","DialogContent","DialogContentText","UncgID","UncgTitle","DialogActions","Button","color","Home","resultPage","axios","get","params","then","res","catch","err","About","college","setCollege","setName","email","setEmail","message","setMessage","href","Accordion","Card","Toggle","as","variant","eventKey","Collapse","Body","Form","onSubmit","confirm","preventDefault","post","response","error","style","width","Group","controlId","Label","Control","currentTarget","rows","map","item","index","key","Error","savedTableData","setSavedTableData","loadingData","setLoadingData","Find","savedData","filteredData","filter","handleDeleteRow","clear","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.768cb71b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brand.e8d492e3.png\";","import React from 'react';\nimport {\n    Link,\n    NavLink\n  } from \"react-router-dom\";\nimport brandImage from '../../Images/brand.png';\n\nfunction Header() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container\">\n\n                <Link className=\"navbar-brand d-flex align-items-center\" to=\"/\">\n                    <img src={brandImage} alt=\"Brand_Image\"/>\n                    <p className=\"m-0 ml-2\">Community College Course Search Tool</p>\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                    <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/\" exact={true}>Home</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/search\">Saved Courses</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nfunction Footer() {\n    return (\n        <footer className=\"py-2 px-3 d-flex flex-column mt-4 mt-sm-0 bg-light\">\n            <Link to='/' className=\"text-dark text-center\">Contact information</Link>\n            <Link to='/' className=\"text-center text-dark\">All right reserved by</Link>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\n\nfunction SearchForm(props) {\n\n    let {searchQuery ,setSearchQuery, setResultPage} = props;\n\n    let handleChange = e => {\n        const {name , value} = e.target;\n        setSearchQuery( prevState => ({\n            ...prevState,\n            [name] : value\n        }))\n    }\n\n    const onCourseChanged = (value) => {\n        setSearchQuery( prevState => ({\n            ...prevState,\n            id : value\n        }))\n    }\n\n    const handleSearch = () => {\n        if(searchQuery.id.length && searchQuery.year && searchQuery.semester && searchQuery.type){\n            setResultPage(1);\n        }else{\n            setResultPage(0);\n        }\n    }\n\n    return (\n        <>\n            <div className=\"d-flex flex-column justify-content-center align-items-center px-2 px-sm-5\">\n\n                <h2 className=\"text-center font-weight-bold\">\n                    Search available courses from NC community colleges.\n                </h2>\n\n                <h5 className=\"text-center mb-3\">Please enter the following information to get started</h5>\n\n                <div className=\"form-group row w-75\">\n\n                    <select name=\"id_cat\" className=\"col-md-4 form-control mb-3 mb-md-0 border-none\" value={searchQuery.selectIdCat} onChange={handleChange}>\n                        <option value=\"courseId\">Community College Course ID</option>\n                        <option value=\"uncgId\">UNCG Course ID</option>\n                    </select>\n\n                    {/* <label htmlFor=\"courseId\" className=\"col-md-4 col-form-label\">Course ID</label> */}\n                    <div className=\"col-md-8\">\n                        <TagsInput inputProps={{placeholder : \" \"}} value={searchQuery.id} onChange={onCourseChanged} />\n                         {/*<input className=\"form-control\" id=\"courseId\" name=\"id\" value={searchQuery.id} onChange={handleChange}/>*/}\n                    </div>\n                </div>\n\n                <div className=\"form-group row w-75\">\n                    <label htmlFor=\"academicYear\" className=\"col-md-4 col-form-label\">Academic year</label>\n                    <div className=\"col-md-8\">\n                        <select id=\"academicYear\" name=\"year\" className=\"form-control\" value={searchQuery.year} onChange={handleChange}>\n                            <option value=\"2021\">2021</option>\n                            <option value=\"2020\">2020</option>\n                            <option value=\"2019\">2019</option>\n                            <option value=\"2018\">2018</option>\n                            \n                        </select>\n                    </div>\n                </div>\n\n                <div className=\"form-group row w-75\">\n                    <label htmlFor=\"semester\" className=\"col-md-4 col-form-label\">Semester</label>\n                    <div className=\"col-md-8\">\n                        <select id=\"semester\" name=\"semester\" className=\"form-control\" value={searchQuery.semester} onChange={handleChange}>\n                            <option value=\"Summer\">Summer</option>\n                            <option value=\"Fall\">Fall</option>\n                            <option value=\"Winter\">Winter</option>\n                            <option value=\"Spring\">Spring</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className=\"form-group row w-75\">\n                    <label htmlFor=\"courseType\" className=\"col-md-4 col-form-label\">Type of course</label>\n                    <div className=\"col-md-8\">\n                        <select id=\"courseType\" name=\"type\" className=\"form-control\" value={searchQuery.type} onChange={handleChange}>\n                            <option value=\"All\">All</option>\n                            <option value=\"Online\">Online</option>\n                            <option value=\"Ofline\">Offline</option>\n                        </select>\n                    </div>\n                </div>\n\n                <button className=\"btn mt-3 bg-primary-custom text-light\" onClick = {handleSearch}>Search</button>\n\n                </div>\n        </>\n    );\n}\n\nexport default SearchForm;","import React from 'react';\n\nfunction Modal({selectedCollege}) {\n    return (\n        <>\n            {selectedCollege && (\n                <div className=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog modal-lg\" role=\"document\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">{selectedCollege.College}</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Course Name : {selectedCollege.CourseName}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Course Subject : {selectedCollege.CourseSubject}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Class ID : {selectedCollege.ClassID}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Credits : {selectedCollege.Credits}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Instructor : {selectedCollege.Instructor}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Section Number : {selectedCollege.SectionNumber}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Semester : {selectedCollege.Semester}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Year : {selectedCollege.Year}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Class Days : {selectedCollege.ClassDays}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Course Building : {selectedCollege.CourseBuilding}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Course Room : {selectedCollege.CourseRoom}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Location : {selectedCollege.Location}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Time Of Course : {selectedCollege.TimeOfCourse}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Weeks In Semester : {selectedCollege.WeeksInSemester}</p>\n                                </div>\n                                <div className=\"col-md-6 mb-2\">\n                                    <p>Dates : {selectedCollege.Dates}</p>\n                                </div>\n                                \n                            </div>\n                        </div>\n                            {/* <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n\n            )}\n        </>\n    );\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport Modal from '../lib/Modal';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MaterialTable from \"material-table\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Add from \"@material-ui/icons/Add\";\nimport Check from \"@material-ui/icons/Check\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport More from \"@material-ui/icons/More\";\n\n\n\n\nfunction SearchResult({ searchQuery, setSearchQuery, setResultPage, searchData, setSearchData }) {\n\n    let [selectedCollege, setSelectedCollege] = useState({\n        College: \"\"\n    });\n\n    //state variable that lets up keep track of course dialog info\n    const [open, setOpen] = useState(false);\n\n    const columns = [\n        { title: \"Subject\", field: \"CourseSubject\" },\n        { title: \"Course Number\", field: \"ClassID\" },\n        { title: \"Course Name\", field: \"CourseName\" },\n        { title: \"College\", field: \"College\" },\n        { title: \"Section\", field: \"SectionNumber\" },\n        { title: \"Dates\", field: \"Dates\" },\n        { title: \"Location\", field: \"Location\" },\n        { title: \"Cost\", field: \"Cost\" },\n        { title: \"UNCG ID\", field: \"UncgID\"}\n    ];\n\n    //Place holder while table data loads\n    const [tableData, setTableData] = useState([\n        { CourseSubject: \"loading\" }\n    ]);\n\n\n    let handleClick = () => {\n        setSearchQuery({\n            id_cat: 'courseId',\n            id: [],\n            year: '2020',\n            semester: 'Fall',\n            type: 'Online'\n        })\n        setResultPage(0);\n        setSearchData(null);\n    }\n\n    //save all rows into local storage\n    let handleSaveAll = () => {\n        let saveResults = localStorage.getItem('saveTableData');\n        let saveData = saveResults ? JSON.parse(saveResults).concat(searchData) : [].concat(searchData);\n        localStorage.setItem(\"saveTableData\", JSON.stringify(saveData));\n        window.alert(\"Search Result Saved\");\n    }\n\n    //Set table data once it is loaded from backend\n    useEffect(() => {\n        if (searchData == null) {\n            console.log(\"not ready\");\n        }\n        else {\n            setTableData(searchData);\n        }\n    });\n\n    let handleRowClick = (e, row) => {\n        setSelectedCollege(row);\n        setOpen(true);\n    };\n\n    //close dialog\n    let handleClose = () => {\n        setOpen(false);\n    };\n\n    //save specified row into local storage\n    let handleSaveRow = (row) => {\n        let saveResults = localStorage.getItem('saveTableData');\n        let saveData = saveResults ? JSON.parse(saveResults).concat(row) : [].concat(row);\n        localStorage.setItem(\"saveTableData\", JSON.stringify(saveData));\n        window.alert(\"Search Result Saved\");\n    };\n\n\n\n\n    return (\n        <div className=\"container search-query px-2 px-sm-3\">\n            <div className=\"row\">\n                <div className=\"col-6 mb-3 mb-md-0 col-md-3\">\n                    <p className=\"text-center\">Course ID</p>\n                    <input type=\"text\" value={searchQuery.id} className=\"form-control\" readOnly />\n                </div>\n\n                <div className=\"col-6 mb-3 mb-md-0 col-md-3\">\n                    <p className=\"text-center\">Academic year</p>\n                    <input type=\"text\" value={searchQuery.year} className=\"form-control\" readOnly />\n                </div>\n\n                <div className=\"col-6 mb-3 mb-md-0 col-md-3\">\n                    <p className=\"text-center\">Semester</p>\n                    <input type=\"text\" value={searchQuery.semester} className=\"form-control\" readOnly />\n                </div>\n\n                <div className=\"col-6 mb-3 mb-md-0 col-md-3\">\n                    <p className=\"text-center\">Type of course</p>\n                    <input type=\"text\" value={searchQuery.type} className=\"form-control\" readOnly />\n                </div>\n            </div>\n\n            <div><MaterialTable\n                title=\"Search Results\"\n                data={tableData}\n                columns={columns}\n                onRowClick={(evt, selectedRow) => handleRowClick(evt, selectedRow)}\n                options={{\n                    search: false,\n                    filtering: true,\n                    paging: true,\n                    pageSize: 10,\n                    pageSizeOptions: [10, 20, 50],\n                    exportButton: true,\n                    rowStyle: { height: 5, fontSize: \"14px\" },\n                    headerStyle: { height: 10 },\n                    maxBodyHeight: 500\n                }}\n                icons={{\n                    Clear: Clear,\n                    Check: Check,\n                    DetailPanel: ChevronRight,\n                    Delete: DeleteOutline,\n                    Export: SaveAlt,\n                    Filter: FilterList,\n                    FirstPage: FirstPage,\n                    LastPage: LastPage,\n                    NextPage: ChevronRight,\n                    PreviousPage: ChevronLeft,\n                    Search: Search,\n                    Remove: Remove,\n                    Add: Add,\n                    SortArrow: ArrowDownward,\n                    Edit: Edit,\n                    ViewColumn: ViewColumn,\n                    More: More\n                }}\n                actions={[\n                    {\n                        icon: Add,\n                        tooltip: 'Save Class',\n                        onClick: (evt, selectedRow) => handleSaveRow(selectedRow)\n\n                    }\n                ]}\n\n            />\n            </div>\n\n\n            <div className=\"d-flex mb-5\">\n                <button className=\"btn text-light bg-primary-custom mr-2\" onClick={handleClick}>Search Again</button>\n                <button className=\"btn text-light bg-primary-custom mr-2\" onClick={handleSaveAll}>Save All</button>\n            </div>\n\n\n            <Modal selectedCollege={selectedCollege} />\n            <Dialog\n                open={open}\n                aria-labelledby=\"draggable-dialog-title\"\n            >\n                <DialogTitle id=\"draggable-dialog-title\">Course Information</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Course Name : {selectedCollege.CourseName}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Class ID : {selectedCollege.ClassID}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Credit Hours : {selectedCollege.Credits}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Instructor : {selectedCollege.Instructor}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Section Number : {selectedCollege.SectionNumber}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Semester : {selectedCollege.Semester}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Year : {selectedCollege.Year}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Class Days : {selectedCollege.ClassDays}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Course Building : {selectedCollege.CourseBuilding}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Course Room : {selectedCollege.CourseRoom}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Location : {selectedCollege.Location}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Time Of Course : {selectedCollege.TimeOfCourse}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Weeks In Semester : {selectedCollege.WeeksInSemester}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Dates : {selectedCollege.Dates}\n                    </DialogContentText>\n                    <DialogContentText>\n                        UNCG ID : {selectedCollege.UncgID}\n                    </DialogContentText>\n                    <DialogContentText>\n                        UNCG Course Title : {selectedCollege.UncgTitle}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                 </Button>\n                </DialogActions>\n            </Dialog>\n\n        </div>\n    );\n}\n\nexport default SearchResult;","import React, {useEffect, useState} from 'react';\nimport Header from './lib/Header';\nimport Footer from './lib/Footer';\nimport SearchForm from \"./utils/SearchForm\";\nimport SearchResult from \"./utils/SearchResults\";\nimport axios from \"axios\";\n\nconst Home = () => {\n    let [searchQuery, setSearchQuery] = useState({\n        id_cat : 'courseId',\n        id : [],\n        year : '2020',\n        semester : 'Fall',\n        type : 'Online'\n    })\n    let [resultPage, setResultPage] = useState(0);\n    let [searchData, setSearchData] = useState(null);\n\n    // Fetching data\n    useEffect(() => {\n        if(resultPage){\n            axios.get(\"https://uncgtransfer.herokuapp.com/cccourse/find\",{\n                params : {\n                    \"id_cat\" : searchQuery.id_cat,\n                    \"CourseSubject\" : searchQuery.id,\n                    \"classType\" : searchQuery.type,\n                    \"year\" : searchQuery.year,\n                    \"semester\" : searchQuery.semester\n                }\n            })\n            .then(res => {\n                setSearchData(res.data);\n                console.log(res.data);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }\n    },[resultPage])\n\n    return (\n        <>\n            <Header/>\n            {\n                resultPage === 0 ? (\n                        <SearchForm\n                            searchQuery = {searchQuery}\n                            setSearchQuery = {setSearchQuery}\n                            setResultPage = {setResultPage}\n                        />\n                    ) :\n                    (\n                        <SearchResult searchQuery = {searchQuery} searchData = {searchData} setSearchQuery = {setSearchQuery} setResultPage = {setResultPage} setSearchData={setSearchData}/>\n                    )\n            }\n            <Footer/>\n            \n        </>\n    );\n}\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport Header from './lib/Header';\nimport Footer from './lib/Footer';\nimport axios from 'axios'\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from 'react-bootstrap/Form';\n\nconst About = () => {\n    const [college, setCollege] = useState([]);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n\n    useEffect(() => {\n        axios.get('https://uncgtransfer.herokuapp.com/cccourse/college')\n            .then(res => {\n                setCollege(res.data);\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    const handleNameChange = (e) => {\n        setName(e.currentTarget.value);\n    }\n    const handleEmailChange = (e) => {\n        setEmail(e.currentTarget.value);\n    }\n    const handleMessageChange = (e) => {\n        setMessage(e.currentTarget.value);\n    }\n    const handleSubmit = (e) => {\n        if (name === '' || email === '' || message === '') {\n            window.confirm('Please fill out all fields before submitting');\n            e.preventDefault();\n        }\n        else {\n            console.log('submitted info: ' + name + email + message);\n            axios.post('https://uncgtransfer.herokuapp.com/contactUs/', {\n                name: name,\n                email: email,\n                message: message\n            }).then(response => {\n                if (response.data === 'Success') {\n                    window.confirm('Message sent');\n                }\n                else {\n                    window.confirm('Error has occurred, please retry');\n                }\n            }).catch((error) => {\n                console.log(error);\n            });\n\n            e.preventDefault();\n        }\n\n    }\n\n    return (\n        <>\n            <Header />\n\n            <div className=\"container px-2 px-sm-5 py-5\">\n                <p>\n                    This application was developed to help UNCG students save time and money by helping them find transferrable courses at local community colleges.\n                    If you find a course you need you can sign up at that community college's website. Contact your advisor before you register for courses at another college.\n                </p>\n                <div>\n                    <p>The Comprehensive Articulation Agreement (CAA) is a statewide agreement that governs the\n                    transfer of credits between NC community colleges and NC public universities. This application was created using courses in the CAA.\n                For more information click <a href={\"https://www.nccommunitycolleges.edu/academic-programs/college-transferarticulation-agreements/comprehensive-articulation-agreement-caa\"}> here</a>\n                    </p>\n                </div>\n\n                <div>\n                    <Accordion>\n                    <Card>\n                            <Card.Header>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                                    Contact Us\n                                </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"2\">\n                                <Card.Body>\n                                    <p>Feel free to contact us if you have any questions, concerns, or comments and we will get back to you as soon as possible.</p>\n\n                                    <Form onSubmit={handleSubmit} style={{ width: '600px' }}>\n                                        <Form.Group controlId=\"nameField\">\n                                            <Form.Label>Name</Form.Label>\n                                            <Form.Control type=\"name\" placeholder=\"Enter first and last name\" onChange={handleNameChange} />\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"emailField\"  >\n                                            <Form.Label>Email address</Form.Label>\n                                            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleEmailChange} />\n\n                                        </Form.Group >\n\n                                        <Form.Group controlId=\"messageField\" >\n                                            <Form.Label>Message</Form.Label>\n                                            <Form.Control as=\"textarea\" rows={3} onChange={handleMessageChange} />\n                                        </Form.Group>\n\n                                        <Button variant=\"primary\" type=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Form>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        <Card>\n                            <Card.Header>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                    Community Colleges Supported\n                                </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>\n                                    {\n                                        college.length > 0 ? college.map((item, index) => {\n                                            return (\n                                                <p className=\"list-group-item list-group-item-action\" key={index + 1}>{item}</p>\n                                            )\n                                        }) :\n                                            (\n                                                <p>No Colleges Found</p>\n                                            )\n                                    }\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        <Card>\n                            <Card.Header>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                                    Cost Calculation Disclaimer\n                    </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>In the state of North Carolina, the cost per credit hour of a course taken at a community college is $76. The prices displayed do not\n                                take into account miscellaneous prices such as parking, student fees, etc..\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    </Accordion>\n                </div>\n            </div>\n\n            <Footer />\n\n        </>\n    );\n}\n\nexport default About;","import React from 'react';\n\nconst Error = () => {\n\n    return (\n        <>\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\n                <h2 className=\"text-dark text-center font-weight-bold\">404</h2>\n            </div>\n            \n        </>\n    );\n}\n\nexport default Error;","import React, { useState, useEffect } from 'react'\nimport Header from './lib/Header';\nimport Footer from './lib/Footer';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport MaterialTable from \"material-table\";\nimport Find from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Add from \"@material-ui/icons/Add\";\nimport Check from \"@material-ui/icons/Check\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Delete from \"@material-ui/icons/Delete\";\n\nconst Search = () => {\n    let [selectedCollege, setSelectedCollege] = useState({\n        College: \"\"\n    });\n\n    //state variable for keeping track of data saved in local storage\n    let [savedTableData, setSavedTableData] = useState(JSON.parse(localStorage.getItem(\"saveTableData\")));\n\n    //state variable for keeping track of what data is loaded onto table\n    let [loadingData, setLoadingData] = useState([]);\n\n    //clear table and local storage\n    let handleClear = () => {\n        setSavedTableData([]);\n        localStorage.clear();\n    }\n\n    const columns = [\n        { title: \"Subject\", field: \"CourseSubject\" },\n        { title: \"Course Number\", field: \"ClassID\" },\n        { title: \"College\", field: \"College\" },\n        { title: \"Instructor\", field: \"Instructor\" },\n        { title: \"Section\", field: \"SectionNumber\" },\n        { title: \"Dates\", field: \"Dates\" },\n        { title: \"Location\", field: \"Location\" },\n        { title: \"Cost\", field: \"Cost\" }\n    ];\n    //state variable for keeping track of course info dialog\n    const [open, setOpen] = useState(false);\n\n\n    //Set table data once it is retrieved from local storage\n    useEffect(() => {\n        if (savedTableData == null) {\n            console.log(\"no data\");\n        }\n        else {\n            setLoadingData(savedTableData);\n        }\n\n    });\n\n    //open dialog\n    let handleRowClick = (e, row) => {\n        setSelectedCollege(row);\n        console.log(row);\n        setOpen(true);\n    };\n\n    //close dialog\n    let handleClose = () => {\n        setOpen(false);\n    }\n    let handleDeleteRow = (row) => {\n        if (savedTableData !== null) {\n            let savedData = savedTableData;\n            console.log(savedTableData);\n            let filteredData = savedData.filter((item) => item !== row);\n            console.log(filteredData);\n            localStorage.setItem(\"saveTableData\", JSON.stringify(filteredData));\n            setSavedTableData(JSON.parse(localStorage.getItem(\"saveTableData\")));\n        }\n    }\n\n\n    return (\n        <>\n            <Header />\n            <div className=\"container search-query px-2 px-sm-3\">\n                <div><MaterialTable\n                    title=\"Saved Courses\"\n                    data={loadingData}\n                    columns={columns}\n                    onRowClick={(evt, selectedRow) => handleRowClick(evt, selectedRow)}\n                    options={{\n                        search: false,\n                        filtering: true,\n                        paging: true,\n                        pageSize: 5,\n                        pageSizeOptions: [10, 20, 50],\n                        exportButton: true,\n                        rowStyle: { height: 5, fontSize: \"14px\" },\n                        headerStyle: { height: 10 },\n                        maxBodyHeight: 500\n                    }}\n                    icons={{\n                        Clear: Clear,\n                        Check: Check,\n                        DetailPanel: ChevronRight,\n                        Export: SaveAlt,\n                        FirstPage: FirstPage,\n                        Filter: FilterList,\n                        LastPage: LastPage,\n                        NextPage: ChevronRight,\n                        PreviousPage: ChevronLeft,\n                        Search: Find,\n                        Remove: Remove,\n                        Add: Add,\n                        SortArrow: ArrowDownward,\n                        Edit: Edit,\n                        ViewColumn: ViewColumn,\n                        Delete: Delete\n                    }}\n                    actions={[\n                        {\n                            icon: Delete,\n                            tooltip: 'Remove Class',\n                            onClick: (evt, selectedRow) => handleDeleteRow(selectedRow)\n                        }\n                    ]}\n                />\n                </div>\n\n\n                <div className=\"d-flex mb-5\">\n                    <button className=\"btn text-light bg-primary-custom mr-2\" onClick={handleClear}>Clear</button>\n                </div>\n\n            </div>\n            <Dialog\n                open={open}\n                aria-labelledby=\"draggable-dialog-title\"\n            >\n                <DialogTitle id=\"draggable-dialog-title\">Course Information</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Course Name : {selectedCollege.CourseName}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Class ID : {selectedCollege.ClassID}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Credit Hours : {selectedCollege.Credits}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Instructor : {selectedCollege.Instructor}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Section Number : {selectedCollege.SectionNumber}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Semester : {selectedCollege.Semester}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Year : {selectedCollege.Year}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Class Days : {selectedCollege.ClassDays}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Course Building : {selectedCollege.CourseBuilding}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Course Room : {selectedCollege.CourseRoom}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Location : {selectedCollege.Location}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Time Of Course : {selectedCollege.TimeOfCourse}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Weeks In Semester : {selectedCollege.WeeksInSemester}\n                    </DialogContentText>\n                    <DialogContentText>\n                        Dates : {selectedCollege.Dates}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                 </Button>\n                </DialogActions>\n            </Dialog>\n            <Footer />\n\n        </>\n    );\n}\n\nexport default Search;","import React from 'react';\nimport Home from './components/Home';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport About from './components/About';\nimport Error from './components/404';\nimport Search from './components/Search';\n\nfunction App() {\n  return (\n    <div className='app d-flex flex-column justify-content-between'>\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route path=\"/about\">\n          <About/>\n        </Route>\n\n        \n        <Route path='/search'>\n          <Search/>\n        </Route>\n        \n        <Error/>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}